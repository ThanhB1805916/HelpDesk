@model HelpDesk.Areas.Manager.Models.TroubleModel.TroubleShareModelView

@{
    ViewBag.Title = StaticResource.Resource.details;
    Layout = ViewBag.Layout;
}

<h2>@StaticResource.Resource.details</h2>

<div class="form-horizontal">
    <p class="alert-success" id="sucess">@ViewBag.Success</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_Trouble)
    <fieldset style="background-color: #48dbfb; margin-bottom:20px">
        <legend style="background-color: #0abde3; padding-left:10px; font-weight: bold">@StaticResource.Resource.details</legend>
        <div class="form-group">
            @Html.Label(StaticResource.Resource.nameReport, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Report)
                @Html.TextBox("Report", ViewData["Report"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Report, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(StaticResource.Resource.nameFill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Fill)
                @Html.TextBox("Fill", ViewData["Fill"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Fill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(StaticResource.Resource.nameManage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Manage)
                @Html.TextBox("manage", ViewData["Manage"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Manage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_Device, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.id_Device, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Device, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.describe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.describe, 7, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.images)
                @if (Model.images == "null" || Model.images == null)
                {
                    @Html.Label("image", "No Image", new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                }
                else
                {
                    <img src="@Url.Content(Model.images)" alt="Image" />
                }


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.status, new List<SelectListItem>()
                    {
                        new SelectListItem(){ Selected = true, Text = "Sent", Value = "0" },
                        new SelectListItem(){ Selected = false, Text = "Received", Value = "1" },
                        new SelectListItem(){ Selected = false, Text = "Processing", Value = "2" },
                        new SelectListItem(){ Selected = false, Text = "Finished", Value = "3" },
                        new SelectListItem(){ Selected = false, Text = "Finished", Value = "4" }

                    },
                    new { htmlAttributes = new { @class = "form-control" }, disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.level, new List<SelectListItem>()
                        {
                            new SelectListItem(){ Selected = true, Text = "Less Serious", Value = "0" },
                            new SelectListItem(){ Selected = false, Text = "Serious", Value = "1" },
                            new SelectListItem(){ Selected = false, Text = "Very Serious", Value = "2" }

                        },
                        new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateStaff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dateStaff, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                @Html.ValidationMessageFor(model => model.dateStaff, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.status == 3)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.dateManage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.dateManage, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.dateManage, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.dateManage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("dateManage", Model.dateManage, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" }, type = "date" })
                    @Html.ValidationMessageFor(model => model.dateManage, "", new { @class = "text-danger" })
                    <span class="text-danger" id="errorDate"></span>
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.dateTech, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dateTech, new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                @Html.ValidationMessageFor(model => model.dateTech, "", new { @class = "text-danger" })
            </div>
        </div>


    </fieldset>

    <fieldset style="background-color: #48dbfb">
        <legend style="background-color: #0abde3; padding-left:10px;font-weight: bold">Detail Technican</legend>
        <div id="divTech">
            @if (Model.id_Tech.Count > 0)
            {

                for (int i = 0; i < Model.id_Tech.Count; i++)
                {
                    if (Model.id_DetailTech.Count > i)
                    {
            <fieldset style="text-decoration: none; background-color: #48dbfb; margin: 10px" id="div_@Model.id_DetailTech[i]">
                <legend style="font-size: 18px; background-color:#0abde3 ; padding-left:10px; font-weight: bold">Technician @(i + 1)</legend>
                <div class="form-group">
                    @Html.LabelFor(model => model.id_Tech, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.id_Tech[i], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                        @Html.ValidationMessageFor(model => model.id_Tech, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.statusTech, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.statusTech[i])
                        @Html.TextBox("statusTe_" + i, (ViewData["StatusTech"] as List<string>)[Model.statusTech[i]], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.describeTech, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (Model.statusTech[i] == 1 || Model.statusTech[i] == 3)
                        {
                            @Html.TextAreaFor(model => model.describeTech[i], 7, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(model => model.describeTech[i], 7, 50, new { htmlAttributes = new { @class = "form-control" } })
                        }

                        @Html.ValidationMessageFor(model => model.describeTech, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.id_FAQ, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (Model.statusTech[i] == 1 || Model.statusTech[i] == 3)
                        {
                            @Html.TextBoxFor(model => model.id_FAQ[i], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.id_FAQ[i], new { htmlAttributes = new { @class = "form-control" }, @type = "number" })
                        }
                        @Html.ValidationMessageFor(model => model.id_FAQ, "", new { @class = "text-danger" })
                        @if (Model.id_FAQ[i] > 0)
                        {
                            @Html.ActionLink("See more>>", "Detail", "FAQ", new { area = "", id = Model.id_FAQ[i] }, new { target = "_blank" })
                        }
                        else
                        {
                            @Html.ActionLink("See more>>", "Index", "FAQ", null, new { target = "_blank" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.deadline, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.deadline[i], "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                        @Html.ValidationMessageFor(model => model.deadline, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dateFinish, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.dateFinish[i], "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                        @Html.ValidationMessageFor(model => model.dateFinish, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.id_DetailTech[i])


            </fieldset>
                    }
                    
                }

              }
            else
            {
                <div class="form-group" id="txtNoTech">
                    <div class="col-md-offset-2 col-md-10">
                        @*<p class="bg-warning" style="text-align:center">No Technician</p>*@
                        <span class="alert-warning" style="padding-left: 15px; padding-right:15px">No Technician</span>
                    </div>
                </div>
            }
        </div>
        
    </fieldset>
    
</div>

