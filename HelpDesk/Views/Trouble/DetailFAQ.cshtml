@model HelpDesk.Areas.Tech.Models.DetailTechMV

@{
    ViewBag.Title = "DetailFAQ";
    Layout = ViewBag.Layout;
}

<h2>Detail FAQ</h2>

<div class="form-horizontal">

    <hr />
    @Html.HiddenFor(model => model.id_Trouble)
    @Html.HiddenFor(model => model.id_DetailTech)
    <fieldset style="background-color: lightgray; margin-bottom:20px">
        <legend style="background-color: lightgray; padding-left:10px; font-weight: bold">Detail Trouble</legend>
        <div class="form-group">
            @Html.Label("Report Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Report)
                @Html.TextBox("Report", ViewData["Report"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Report, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Filler Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Fill)
                @Html.TextBox("Fill", ViewData["Fill"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Fill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Manager Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Manage)
                @Html.TextBox("manage", ViewData["Manage"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Manage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_Device, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.id_Device, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.id_Device, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.describe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.describe, 7, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.images))
                {
                    <img src="@Url.Content(Model.images)" alt="Image" />
                }
                else
                {
                    @Html.Label("image", "No Image", new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.status, new List<SelectListItem>()
                    {
                        new SelectListItem(){ Selected = true, Text = "Sent", Value = "0" },
                        new SelectListItem(){ Selected = false, Text = "Received", Value = "1" },
                        new SelectListItem(){ Selected = false, Text = "Processing", Value = "2" },
                        new SelectListItem(){ Selected = false, Text = "Finished", Value = "3" },
                        new SelectListItem(){ Selected = false, Text = "Finished", Value = "4" }

                    },
                    new { htmlAttributes = new { @class = "form-control" }, disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.level, new List<SelectListItem>()
                        {
                            new SelectListItem(){ Selected = true, Text = "Less Serious", Value = "0" },
                            new SelectListItem(){ Selected = false, Text = "Serious", Value = "1" },
                            new SelectListItem(){ Selected = false, Text = "Very Serious", Value = "2" }

                        },
                        new { htmlAttributes = new { @class = "form-control" }, disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateStaff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateStaff, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.dateStaff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateManage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateManage, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.dateManage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateTech, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateTech, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.dateTech, "", new { @class = "text-danger" })
            </div>
        </div>


    </fieldset>

    <fieldset style="text-decoration: none; background-color: burlywood; margin-bottom: 20px">
        <legend style="font-size: 18px; background-color:burlywood ; padding-left:10px; font-weight: bold">Technician</legend>
        <div class="form-group">
            @Html.Label("Technician Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.id_Tech)
                @Html.TextBox("Tech", ViewData["Tech"], new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                @Html.ValidationMessageFor(model => model.id_Tech, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.describeTech, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.describeTech, 7, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                @Html.ValidationMessageFor(model => model.describeTech, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateFinish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateFinish, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.dateFinish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_FAQ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.id_FAQ, new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                @if (Model.id_FAQ > 0)
                {
                    @Html.ActionLink("Detail", "Detail", "FAQ", new { area = "", id = Model.id_FAQ }, null)
                }

                @Html.ValidationMessageFor(model => model.id_FAQ, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.id_FAQ > 0)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.describeFAQ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.describeFAQ, 7, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.describeFAQ, "", new { @class = "text-danger", @id = "ErrContent" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.finishTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.finishTime, new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })Days
                    @Html.ValidationMessageFor(model => model.finishTime, "", new { @class = "text-danger", @id = "ErrContent" })
                </div>
            </div>
        }
    </fieldset>

</div>
