@model Model.ViewModel.TroubleDetailViewModel
@{
    ViewBag.Title = "Detail";
    Layout = ViewBag.Layout;
}

<style>
    /** {
            box-sizing: border-box;
        }*/
    .form-group img {
        height: 250px;
    }
    /*.form-group img:hover {
            transform: scale(2);
        }*/
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TroubleID)
        <fieldset style="margin-bottom:20px">
            <legend style="padding-left:10px; font-weight: bold">Detail Trouble</legend>
            <div class="form-group">
                @Html.Label(StaticResource.Resource.nameReport, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ReportID)
                    @Html.TextBox("Report", ViewData["Report"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                    @Html.ValidationMessageFor(model => model.ReportID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label(StaticResource.Resource.nameFill, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.FillID)
                    @Html.TextBox("Fill", ViewData["Fill"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                    @Html.ValidationMessageFor(model => model.FillID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label(StaticResource.Resource.nameManage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ManagerID)
                    @Html.TextBox("manage", ViewData["Manage"], new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                    @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeviceID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DeviceID, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                    @Html.ValidationMessageFor(model => model.DeviceID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Describe, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Describe, 7, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                    @Html.ValidationMessageFor(model => model.Describe, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.Images)
                    @if (Model.Images == "null")
                    {
                        @Html.Label("image", "No Image", new { htmlAttributes = new { @class = "form-control" }, @readonly = true })
                    }
                    else
                    {
                        <img src="@Url.Content(Model.Images)" alt="Image" />
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Status == 0)
                    {
                        @Html.TextBox("status", "Sent", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else if (Model.Status == 1)
                    {
                        @Html.TextBox("status", "Receive", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else if (Model.Status == 2)
                    {
                        @Html.TextBox("status", "Troubleshooting", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else if (Model.Status == 3 || Model.Status == 4)
                    {
                        @Html.TextBox("status", "Finished", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Level == -1)
                    {
                        @Html.TextBox("level", "Level not set", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else if (Model.Level == 0)
                    {
                        @Html.TextBox("level", "Less serious", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else if (Model.Level == 1)
                    {
                        @Html.TextBox("level", "Serious", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else if (Model.Level == 2)
                    {
                        @Html.TextBox("level", "Very serious", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateStaff, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateStaff, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.DateStaff, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateTech, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.DateTech == null)
                    {
                        @Html.TextBox("dateTech", "Date not set", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.DateTech, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }

                    @Html.ValidationMessageFor(model => model.DateTech, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateManager, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.DateTech == null)
                    {
                        @Html.TextBox("dateTech", "Date not set", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.DateManager, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    }
                    @Html.ValidationMessageFor(model => model.DateManager, "", new { @class = "text-danger" })
                </div>
            </div>

        </fieldset>
        <hr />

    </div>
}