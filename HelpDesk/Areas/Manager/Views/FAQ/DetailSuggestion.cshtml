@model Model.FAQ

@{
    ViewBag.Title = "DetailSuggestion";
    Layout = "~/Areas/Manager/Views/Shared/_LayoutTrouble.cshtml";
}

<h2>@StaticResource.Resource.detailSug</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FAQ</h4>
        <hr />
        <p id="sucess" class="alert-success">@ViewBag.Success<p>
        <p id="sucess" class="alert-danger">@ViewBag.Fail<p>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id_FAQ)
            @Html.HiddenFor(model => model.id_User)
            <div class="form-group">
                @Html.Label(StaticResource.Resource.nameSug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" type="text" readonly value="@ViewBag.NameSug">

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.question, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.question, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.question, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.rightt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.rightt, new List<SelectListItem>()
                                {
                                    new SelectListItem(){ Selected = true, Text = StaticResource.Resource._private, Value = "0" },
                                    new SelectListItem(){ Selected = false, Text = StaticResource.Resource._public, Value = "1" }
                                }, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.rightt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.answer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.answer, 10, 50, new { htmlAttributes = new { @class = "form-control" }, @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.rightt == -1)
            {
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@StaticResource.Resource.accept" class="btn btn-success" />
                        <input type="button" value="@StaticResource.Resource.reject" onclick="Reject()" class="btn btn-danger" />
                    </div>
                </div>
            }

    </div>
}
<div>
    <a class="icon" href="@Url.Action("Index", "Trouble")">
        <i class="fas fa-arrow-left"></i>
        <span class="tooltiptext">Back</span>
    </a>
</div>

@section scripts{
    <script type="text/javascript">
        setTimeout(function () { $('#sucess').fadeOut(); }, 2000);
    </script>

    <script>
        function Reject() {
            if (Check()) {
                var idFAQ = $('#id_FAQ').val()
                $.ajax({
                    url: '/Manager/FAQ/RejectFAQ/' + idFAQ,
                    type: 'get',
                    dataType: 'json',
                    success: function (data) {
                        if (data) {
                            window.location = '/Manager/FAQ/SuggestionFAQ'
                        }
                    },
                    error: (err) => {
                        console.log(err);
                    }
                })
            }
        }

        function Check() {
            return confirm('Do you want to delele it?')
        }
    </script>
}